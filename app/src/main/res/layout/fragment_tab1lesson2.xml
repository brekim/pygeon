<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fillViewport="true">

    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#F6CF88"
        tools:context=".tab1lesson2">

        <View
            android:layout_marginTop="1100dp"
            android:layout_height = "15dp"
            android:layout_width = "match_parent"
            android:visibility="invisible"
            />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_alignParentStart="true"
            android:layout_alignParentTop="true"
            android:layout_marginStart="25dp"
            android:layout_marginTop="24dp"
            android:text="Naming a Variable"
            android:textColor="#473005"
            android:textSize="24sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="73dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less2"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="Choosing a good name for your variables is really important. If you have specific names, it will let people (and yourself) understand your code a lot easier. Here are some rules when it comes to naming a variable in Python: \n\t1) You cannot start the name with a number. &quot;2cats&quot; is not a valid variable name. \n\n\t2) Your variable cannot have anything that is not a number, a letter, or an underscore (&quot;_&quot;). \n\n\t3) Variable names are case-sensitive. This means that &quot;cat&quot; is different from the variable &quot;Cat&quot;. \n\n\t4) Be specific. If you are making some variables to represent the colors of the rainbow, &quot;thingy&quot; is not a good variable name! Something like &quot;first_color&quot; is much better. \n\n5) You can have uppercase letters, but try to keep them all lowercase. Separate each word with an underscore. In Python, &quot;first_color&quot; is better to use than &quot;firstColor&quot;. \n\n\t6) Avoid Reserved Keywords. These are phrases that already mean something to Python, like String or print, and will confuse both you and your computer. "

            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="680dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less2"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="In Python, we also organize our code using identation (tabs). This makes everything look clean and easier to read. Here is an example of indented code: "

            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="790dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/code_edittext"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text=" for i in range(0, 15): \n \t \t \t \tprint(&quot;Banana&quot;) \n \t \t \t \tif(i % 2 == 0): \n \t \t \t \t \t \t \t \tprint(“Rotten”) \n \t \t \t \telse: \n \t \t \t \t \t \t \t \tprint(&quot;Ripe&quot;)"

            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="940dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less2"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="Don't worry about what the code means — focus on how the code is structured, and how certain lines are more indented than others. This is a really IMPORTANT aspect of Python, because if you don't indent correctly, your code won't work!"

            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />




    </RelativeLayout>
</ScrollView>