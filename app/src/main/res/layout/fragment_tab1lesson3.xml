<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fillViewport="true">

    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#FEE6EA"
        tools:context=".tab1lesson3">

        <View
            android:layout_marginTop="1000dp"
            android:layout_height = "15dp"
            android:layout_width = "match_parent"
            android:visibility="invisible"
            />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_alignParentStart="true"
            android:layout_alignParentTop="true"
            android:layout_marginStart="25dp"
            android:layout_marginTop="24dp"
            android:text="Basic Logic"
            android:textColor="#AC0722"
            android:textSize="24sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="73dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less3"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="The &quot;and&quot; and &quot;or&quot; operators (not functions!) are the core of logic in Python. They mean the same thing in Python as they do in English: \n\t1) The &quot;and&quot; operator asks, &quot;is this AND this true&quot;? If both statements are true when combined with the &quot;and&quot; operator, a value of True is returned. If not, a value of False is returned. \n \n \t2) The &quot;or&quot; operator asks, &quot;is this OR this true&quot;? If ONE of the statements used with the &quot;or&quot; operator is true, then True is returned. If not, False is returned. \n\nThese operators are put between two truth expressions. A truth expression is a small piece of code that evaluates to True or False. \n\nIn a previous lesson, we worked with the startswith() function, and told you that it checks whether a certain String starts with a particular letter. It then returns a value of True or False depending on what the string and letter were. This is an example of a truth expression. \n\nComparisons are also considered truth expressions. If you use the >, >=, ==, or similar operators, a truth value results from it. \n\nLet's say we had two variables, kid_hungry and ate_banana. We let kid_hungry = True and ate_banana = False. Now we want to find the values of these variables:   "
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="780dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/code_edittext"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="truth1 = kid_hungry and ate_banana \ntruth2 = kid_hungry or ate_banana"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="850dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less3"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="kid_hungry and ate_banana are not both true, so truth1 = False. BUT, because kid_hungry is True, truth2 = True, even though ate_banana is False. This is because only one of them needs to be True when we use the &quot;or&quot; operator."
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />


    </RelativeLayout>
</ScrollView>