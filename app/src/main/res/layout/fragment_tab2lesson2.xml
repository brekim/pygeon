<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fillViewport="true">

    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#F6CF88"
        tools:context=".tab2lesson2">

        <View
            android:layout_marginTop="1550dp"
            android:layout_height = "15dp"
            android:layout_width = "match_parent"
            android:visibility="invisible"
            />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_alignParentStart="true"
            android:layout_alignParentTop="true"
            android:layout_marginStart="25dp"
            android:layout_marginTop="24dp"
            android:text="The Parts of a Function"
            android:textColor="#473005"
            android:textSize="24sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="73dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less2"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="Different functions  can do very different things, but they all have four main parts: \n\t1) A name/phrase \n\t\t\t\t a) This is the word we type in to call (or to execute) a function. For the print() function, this is the word &quot;print&quot;. \n\n\t2) Parameters \n\t\t\t\ta) These are the values that the function needs to perform all of its steps. These can be of any type. For the print() function, the parameter is a String that the function will print onto your screen. \n\n\t3)Body steps \n\t\t\t\ta) This the actual code for the steps that the function will perform. Like the print() function, the builtin functions that we will use won't actually show you the code for these body steps. \n\n\t4) An object returned \n\t\t\t\ta) This is what the function will spit back out to you, and it can be of any type. Sometimes, like with print(), there will not be anything returned â€” instead, the function might have just changed something or put something on your screen."

            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_alignParentStart="true"
            android:layout_alignParentTop="true"
            android:layout_marginStart="25dp"
            android:layout_marginTop="655dp"
            android:text="Calling a Function"
            android:textColor="#473005"
            android:textSize="24sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="700dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less2"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="When we say we are going to call a function, that means we are summoning it and asking it to perform the steps. \n\nWhen writing this out, you need to ask yoursel: what are you calling the function on? This is the same thing as asking: what object do we want the function to act on? \n\nLet's take the example of the String function startswith(). This functions figures out whether a certain String starts with a certain letter. So, we are calling the function ON a string and performing a series of steps to check whether that String starts with a letter, which we pass in as a String parameter. \n\n When we call a function ON something, we use &quot;dot notation&quot;, like so:"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="1105dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/code_edittext"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="object.function_name()"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="1150dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less2"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="For the functions startswith(), we write the code like this:"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="1215dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/code_edittext"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="str1 = &quot;banana&quot; \nstarts_with_letter_b = str1.startswith(&quot;b&quot;)"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="1285dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less2"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="Notice how we called startswith() on the String str1. We then passed the letter &quot;b&quot; as a parameter to check whether str1 starts with the letter b. \n\nThe function startswith() returns a value of True or False, which basically mean Yes and No. Since the word &quot;banana&quot; does start with the letter b, we get the value True. We then set this equal to another variable named starts_with_letter_b to save the result! "
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />



    </RelativeLayout>
</ScrollView>