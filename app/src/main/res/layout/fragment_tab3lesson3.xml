<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fillViewport="true">

    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#FEE6EA"
        tools:context=".tab3lesson3">

        <View
            android:layout_marginTop="1870dp"
            android:layout_height = "15dp"
            android:layout_width = "match_parent"
            android:visibility="invisible"
            />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_alignParentStart="true"
            android:layout_alignParentTop="true"
            android:layout_marginStart="25dp"
            android:layout_marginTop="24dp"
            android:text="Using Else and Elif"
            android:textColor="#AC0722"
            android:textSize="24sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="73dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less3"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="Sometimes, we don't want Python to just ignore what's inside the &quot;if&quot; part of the if statement. We may want it to do something else instead, or try multiple if statements in a row. To do this, we can add an &quot;else&quot; segment into the code like this:"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="225dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/code_edittext"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="kid_hungry = True \nate_banana = False \n\n if(kid_hungry and ate_banana): \n\t\t\t\tprint(&quot;You shouldn't be hungry right now!&quot;) \nelse: \n\t\t\t\tprint(&quot;I guess that makes sense&quot;)"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="565dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less3"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="We can take this a step further with an &quot;elif&quot; segment. The purpose of this segment is to let you check multiple if statements before you reach the &quot;else&quot; statement. Let's take another example: "
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="695dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/code_edittext"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="student_score = 93 \ngood_Score = 90\nbadScore = 75 \ngreatScore = 97\n\nif(student_score >= greatScore):\n\t\t\t\tprint(&quot;Nice job!!&quot; \n\nelif(student_score >= goodScore):\n\t\t\t\tprint(&quot;You studied a lot, didn't you?&quot;\n\nelif(student_score >= badScore):\n\t\t\t\tprint(&quot;Study more next time!&quot;\n\nelse:\n\t\t\t\tprint(&quot;Better tell your parents...&quot;)"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="415dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less3"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="Because ate_banana is False, the truth expression actually equals False, so Python ignores the instructions under the &quot;if&quot; part of the code. Then, it moves onto the &quot;else&quot; part of the code and prints out &quot;I guess that makes sense&quot;."
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="1045dp"
            android:layout_marginEnd="26dp"
            android:background="@drawable/round_edittext_less3"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="As you can see, this code checks whether the student scored a great score. Because they didn't, it moves onto the next statement, which checks whether the student scored a good score. Because they did score a good score, Python prints &quot;You studied a lot, didn't you?&quot;"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="1215dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less3"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="Order matters a lot when it comes to if, elif, and else statements. What if the previous code had looked like this:"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="1310dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/code_edittext"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="student_score = 93 \ngood_Score = 90\nbadScore = 75 \ngreatScore = 97\n\nif(student_score >= badScore):\n\t\t\t\tprint(&quot;Study more next time!&quot; \n\nelif(student_score >= goodScore):\n\t\t\t\tprint(&quot;You studied a lot, didn't you?&quot;\n\nelif(student_score >= greatScore):\n\t\t\t\tprint(&quot;Nice job!!&quot;\n\nelse:\n\t\t\t\tprint(&quot;Better tell your parents...&quot;)"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="1660dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less3"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="Since the student score was 93, it is greater than the value for a bad score, which is 75. So, the first truth expression would return true, and Python would print &quot;Study more next time!&quot;, which is obviously not what we want. We need to make sure to order them properly, so that Python doesn't accidentally do something we don't want it to! "
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />




    </RelativeLayout>
</ScrollView>