<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fillViewport="true">

    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#A1B1DE"
        tools:context=".tab1lesson5">

        <View
            android:layout_marginTop="1700dp"
            android:layout_height = "15dp"
            android:layout_width = "match_parent"
            android:visibility="invisible"
            />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_alignParentStart="true"
            android:layout_alignParentTop="true"
            android:layout_marginStart="25dp"
            android:layout_marginTop="24dp"
            android:text="While Loops"
            android:textColor="#5673C3"
            android:textSize="24sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="73dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less5"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="Sometimes we want to keep doing a certain task, over and over again, until we get to a certain point. For example, we may want to keep checking our roster until we find the name of a certain student. We can do this with a while loop. \n\nA while loop is structured like this:"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />
        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="260dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/code_edittext"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="while(expresion that is True at first): \n\t\t\t\t *code goes here*"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="330dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less5"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="This while loop first checks the truth value of the expression. If it gets True, it runs the code inside it ONCE, and then checks whether the expression is still True. The loop will keep doing this until it finds that expression is now False, and then, it will break out of the loop and move on. \n\n Let's say we have the following variables:"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="540dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/code_edittext"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="name_roster = [&quot;Jane&quot;, &quot;Adam&quot;, &quot;Brett&quot;, &quot;Joe&quot;, &quot;Kim&quot;] \nstudent_target = &quot;Joe&quot; \nstudent_not_yet_found = True \ncurrent_index = 0 "
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="670dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less5"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="So we want to look for the name &quot;Joe&quot; in the list name_roster. We haven't even started searching for his name yet, so student_not_yet_found is True. We will also need to keep track of the index we are checking. We will start with index 0, which is why current_index is 0. \n\n We now set up a while loop to go through the roster:"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />

        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="900dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/code_edittext"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text=" while(student_not_yet_found = True):\n\t\t\t\tif(name_roster[current_index] == &quot;Joe&quot;):\n\t\t\t\t\t\t\t\tprint(&quot;Yay I found it&quot;)\n\t\t\t\t\t\t\t\tprint(current_index)\n\t\t\t\t\t\t\t\tstudent_not_yet_found = False \n\t\t\t\telse:\n\t\t\t\t\t\t\t\tcurrent_index = current_index + 1"
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />
        <TextView
            android:layout_width="360dp"
            android:layout_height="wrap_content"
            android:layout_alignParentEnd="true"
            android:layout_marginTop="1070dp"
            android:layout_marginEnd="25dp"
            android:background="@drawable/round_edittext_less5"
            android:paddingLeft="14dp"
            android:paddingTop="7dp"
            android:paddingRight="14dp"
            android:paddingBottom="7dp"
            android:text="This code is kind of complicated, so let's break it down. \n\nThe loop is checking whether or not student_not_yet_found is equal to True. The first time it goes through the loop, it is equal to True, so it moves on. \n\n The loop then checks what name is at the current_index, which was 0 the first time. At position 0, the name is &quot;Jane&quot;, which is not equal to &quot;Joe&quot;. So, it goes to the else segment of the code. \n\n We want to move onto the next item when the loop starts over, which means we have to increase the index by 1. Doing this will make sure we next look at the index to the right of the one we just checked. \n\n The loop keeps checking each index until it finds the index where the name &quot;Joe&quot; is at. It then prints the current_index along with &quot;Yay I found it!&quot;. \n\n After this — and this is the most important part — it changes student_not_yet_found to False. When the loops runs again, the expression is False, and the loop is broken. "
            android:textAppearance="@style/TextAppearance.AppCompat.Body1"
            android:textColor="#FFFFFF"
            android:textColorHint="#00FFFFFF"
            android:textSize="14sp" />



    </RelativeLayout>
</ScrollView>